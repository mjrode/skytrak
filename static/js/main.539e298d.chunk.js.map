{"version":3,"sources":["requests/play-better.tsx","hooks/use-queries.tsx","components/card.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["get","path","a","axios","data","useStyles","makeStyles","theme","root","flexGrow","margin","paper","maxWidth","padding","image","width","height","img","display","maxHeight","inStock","item","available","CustomCard","vendor","price","updatedAt","classes","Card","className","Paper","Grid","container","spacing","ButtonBase","alt","src","featured_image","title","xs","sm","direction","Typography","gutterBottom","variant","name","Link","color","href","Date","toLocaleDateString","style","toLocaleString","currency","App","playBetterResponse","useState","setData","getData","variants","product","useEffect","useGetPlayBetterStock","Container","align","map","updated_at","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.539e298d.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport async function get<T>(path: string): Promise<T> {\n  const { data } = await axios.get(path);\n  return data;\n}\n","import { useState, useEffect } from 'react';\nimport { get } from '../requests/play-better';\nimport { PlayBetterAPIResponse } from '../types/types';\n\nexport const useGetPlayBetterStock = () => {\n  const [data, setData] = useState<PlayBetterAPIResponse>();\n\n  const getData = async () => {\n    const { variants } = await get<PlayBetterAPIResponse>(\n      'https://www.playbetter.com/collections/golf-launch-monitor/products/skytrak-golf-simulator-launch-monitor.js'\n    );\n    const { product } = await get<PlayBetterAPIResponse>(\n      'https://www.playbetter.com/collections/golf-launch-monitor/products/skytrak-golf-simulator-launch-monitor.json'\n    );\n\n    const response: PlayBetterAPIResponse = {\n      product,\n      variants,\n    };\n\n    setData(response);\n  };\n\n  useEffect(() => {\n    getData();\n  }, []);\n\n  return data;\n};\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport { Paper, Grid, ButtonBase, Button, Link } from '@material-ui/core';\nimport Typography from '@material-ui/core/Typography';\nimport { PlayBetterVariant } from '../types/types';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    margin: '2em 0',\n  },\n  paper: {\n    margin: 'auto',\n    maxWidth: 500,\n    padding: '2em 2em',\n  },\n  image: {\n    width: 128,\n    height: 128,\n  },\n  img: {\n    margin: 'auto',\n    display: 'block',\n    maxWidth: '100%',\n    maxHeight: '100%',\n  },\n}));\nconst formatPrice = (price: number): string => {\n  return (price / 100).toLocaleString('en-US', {\n    style: 'currency',\n    currency: 'USD',\n  });\n};\nconst inStock = (item: PlayBetterVariant) => {\n  return item.available ? 'In Stock' : 'Out of Stock';\n};\nconst CustomCard: React.FC<any> = ({ vendor, item, updatedAt }) => {\n  const classes = useStyles();\n\n  return (\n    <Card className={classes.root}>\n      <Paper className={classes.paper}>\n        <Grid container spacing={2}>\n          <Grid item>\n            <ButtonBase className={classes.image}>\n              <img\n                className={classes.img}\n                alt='complex'\n                src={item.featured_image.src}\n                title='SkyTrak'\n              />\n            </ButtonBase>\n          </Grid>\n          <Grid item xs={12} sm container>\n            <Grid item xs container direction='column' spacing={2}>\n              <Grid item xs>\n                <Typography gutterBottom variant='subtitle1'>\n                  {item.name}\n                </Typography>\n                <Typography variant='body2' gutterBottom>\n                  {'Link:  '}\n                  <Link\n                    color='primary'\n                    href='https://www.playbetter.com/collections/golf-launch-monitor/products/skytrak-golf-simulator-launch-monitor'\n                  >\n                    PlayBetter\n                  </Link>\n                </Typography>\n                <Typography variant='body2' color='textSecondary'>\n                  {`Item updated: ${new Date(updatedAt).toLocaleDateString()}`}\n                </Typography>\n              </Grid>\n              <Grid item>\n                <Typography\n                  style={\n                    item.available ? { color: '#66eb51' } : { color: '#ed6161' }\n                  }\n                  variant='h4'\n                >\n                  {inStock(item)}\n                </Typography>\n              </Grid>\n            </Grid>\n            <Grid item>\n              <Typography variant='subtitle1'>\n                {formatPrice(item.price)}\n              </Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n      </Paper>\n    </Card>\n  );\n};\nexport default CustomCard;\n","import React from 'react';\nimport Container from '@material-ui/core/Container';\nimport { useGetPlayBetterStock } from './hooks/use-queries';\nimport Typography from '@material-ui/core/Typography';\nimport CustomCard from './components/card';\n\nfunction App() {\n  const playBetterResponse = useGetPlayBetterStock();\n  if (!playBetterResponse?.product)\n    return (\n      <div>\n        <h1>Loading...</h1>\n      </div>\n    );\n\n  return (\n    <Container>\n      <Typography style={{ color: '#ffffff' }} variant='h1' align='center'>\n        SkyTraker\n      </Typography>\n\n      {playBetterResponse.variants.map((item) => (\n        <CustomCard\n          item={item}\n          vendor={'Play Better'}\n          updatedAt={playBetterResponse.product.updated_at}\n        ></CustomCard>\n      ))}\n    </Container>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}